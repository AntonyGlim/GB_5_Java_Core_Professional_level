/**
 * Организуем гонки:
 * Все участники должны стартовать одновременно, несмотря на то, что на подготовку у каждого их них уходит разное время.
 * В тоннель не может заехать одновременно больше половины участников (условность).
 * Попробуйте все это синхронизировать.
 * Только после того, как все завершат гонку, нужно выдать объявление об окончании.
 * Можете корректировать классы (в т.ч. конструктор машин) и добавлять объекты классов из пакета util.concurrent.
 */
package lesson_5_Multithreading_Part_II;

import java.util.concurrent.CountDownLatch;
import java.util.concurrent.CyclicBarrier;
import java.util.concurrent.Semaphore;

public class MainClass {

    public static final int CARS_COUNT = 4;                                                 //Количество машин
    public static volatile int number = 0;                                                  //Занятое игроком место

    public static Semaphore smp = new Semaphore(CARS_COUNT / 2);                            //Для прохождения по тоннелю
    static final CountDownLatch cdl_1 = new CountDownLatch(CARS_COUNT);                     //Для того, чтобы основной поток дождался старта
    static final CountDownLatch cdl_2 = new CountDownLatch(CARS_COUNT);                     //Для того, чтобы основной поток дождался финиша
    static final CyclicBarrier cb = new CyclicBarrier(CARS_COUNT);                          //Для того, чтобы собрать потоки перед стартом

    public static void main(String[] args) {

        System.out.println("ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Подготовка!!!");
    //Создаем полосу препятствий и машины
        Race race = new Race(new Road(60), new Tunnel(smp), new Road(40));                  //Полоса препятствий
        Car[] cars = new Car[CARS_COUNT];                                                   //Массив машин
    //Добавляем классы машин в массив (каждая машина - в отдельном потоке)
        for (int i = 0; i < cars.length; i++) {
            cars[i] = new Car(race, 20 + (int) (Math.random() * 10), cb, cdl_1, cdl_2);     //Передаем экземпляры синхронизаторов в конструкторы машин
        }
    //Запускаем потоки
        for (int i = 0; i < cars.length; i++) {
            new Thread(cars[i]).start();
        }
    //Дожидаемся, пока все потоки выполнят подготовку
        try {
            cdl_1.await();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка началась!!!");
    //Дожидаемся, пока все процессы завершат гонку
        try {
            cdl_2.await();
        } catch (InterruptedException e) {
            e.printStackTrace();
        }
        System.out.println("ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка закончилась!!!");
    }
}


//Результат работы:

//ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Подготовка!!!
//Участник #1 готовится
//Участник #2 готовится
//Участник #3 готовится
//Участник #4 готовится
//Участник #4 готов
//Участник #1 готов
//Участник #2 готов
//Участник #3 готов
//ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка началась!!!
//Участник #3 начал этап: Дорога 60 метров
//Участник #4 начал этап: Дорога 60 метров
//Участник #1 начал этап: Дорога 60 метров
//Участник #2 начал этап: Дорога 60 метров
//Участник #3 закончил этап: Дорога 60 метров
//Участник #3 готовится к этапу(ждет): Тоннель 80 метров
//Участник #3 начал этап: Тоннель 80 метров
//Участник #4 закончил этап: Дорога 60 метров
//Участник #4 готовится к этапу(ждет): Тоннель 80 метров
//Участник #4 начал этап: Тоннель 80 метров
//Участник #2 закончил этап: Дорога 60 метров
//Участник #2 готовится к этапу(ждет): Тоннель 80 метров
//Участник #1 закончил этап: Дорога 60 метров
//Участник #1 готовится к этапу(ждет): Тоннель 80 метров
//Участник #3 закончил этап: Тоннель 80 метров
//Участник #4 закончил этап: Тоннель 80 метров
//Участник #3 начал этап: Дорога 40 метров
//Участник #2 начал этап: Тоннель 80 метров
//Участник #1 начал этап: Тоннель 80 метров
//Участник #4 начал этап: Дорога 40 метров
//Участник #3 закончил этап: Дорога 40 метров
//Участник #3 финишировал под номером 1. ПОБЕДА!
//Участник #4 закончил этап: Дорога 40 метров
//Участник #4 финишировал под номером 2
//Участник #2 закончил этап: Тоннель 80 метров
//Участник #2 начал этап: Дорога 40 метров
//Участник #2 закончил этап: Дорога 40 метров
//Участник #2 финишировал под номером 3
//Участник #1 закончил этап: Тоннель 80 метров
//Участник #1 начал этап: Дорога 40 метров
//Участник #1 закончил этап: Дорога 40 метров
//Участник #1 финишировал под номером 4
//ВАЖНОЕ ОБЪЯВЛЕНИЕ >>> Гонка закончилась!!!