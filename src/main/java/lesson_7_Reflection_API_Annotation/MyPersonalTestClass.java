/**
 * Создать класс, который может выполнять «тесты». В качестве тестов выступают классы с наборами методов
 * с аннотациями @Test. Для этого у него должен быть статический метод start(), которому в качестве параметра
 * передается или объект типа Class, или имя класса. Из «класса-теста» вначале должен быть запущен метод
 * с аннотацией @BeforeSuite, если такой имеется. Далее запущены методы с аннотациями @Test, а по завершении
 * всех тестов – метод с аннотацией @AfterSuite. К каждому тесту необходимо добавить приоритеты
 * (int числа от 1 до 10), в соответствии с которыми будет выбираться порядок их выполнения.
 * Если приоритет одинаковый, то порядок не имеет значения. Методы с аннотациями @BeforeSuite и @AfterSuite
 * должны присутствовать в единственном экземпляре, иначе необходимо бросить RuntimeException при запуске «тестирования».
 * Это домашнее задание никак не связано с темой тестирования через JUnit и использованием этой библиотеки:
 * проект пишется с нуля.
 */
package lesson_7_Reflection_API_Annotation;

public class MyPersonalTestClass {
    public static void main(String[] args) {
        //Создать переменные всех пройденных типов данных, и инициализировать их значения;
        System.out.println("example 1");
        example_1();
        System.out.println("");

        //Написать метод, вычисляющий выражение a * (b + (c / d)) и возвращающий результат,
        // где a, b, c, d – входные параметры этого метода;
        System.out.println("example 2");
        System.out.println(example_2(1, 2,3,4));
        System.out.println("");

        //Написать метод, принимающий на вход два числа, и проверяющий,
        // что их сумма лежит в пределах от 10 до 20 (включительно),
        // если да – вернуть true, в противном случае – false;
        System.out.println("example 3");
        System.out.println(example_3(10, 1));
        System.out.println("");

        //Написать метод, которому в качестве параметра передается целое число,
        // метод должен напечатать в консоль положительное число передали или отрицательное
        // (Замечание: ноль считаем положительным числом.);
        System.out.println("example 4");
        System.out.println(example_4(0));
        System.out.println("");

        //Написать метод, которому в качестве параметра передается целое число,
        // метод должен вернуть true, если число отрицательное;
        System.out.println("example 5");
        System.out.println(example_5(12));
        System.out.println("");

        //Написать метод, которому в качестве параметра передается строка, обозначающая имя,
        // метод должен вывести в консоль сообщение «Привет, указанное_имя!»;
        System.out.println("example 6");
        example_6("Федя");
        System.out.println("");

        //*Написать метод, который определяет, является ли год високосным,
        // и выводит сообщение в консоль. Каждый 4-й год является високосным,
        // кроме каждого 100-го, при этом каждый 400-й – високосный.
        System.out.println("example 7");
        example_7(400);

    }
}
